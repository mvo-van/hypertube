version: "3.9"

services:
  app:
    container_name: "app"
    build:
      context: ./app
    depends_on:
      - api
    volumes:
      - ./app:/app
      - /app/node_modules
    ports:
      - "8000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_HOST=localhost
      - WDS_SOCKET_PORT=8000
    networks:
      - front
  api:
    container_name: "api"
    build:
      context: ./api
    volumes:
      - ./api:/api
      - /api/node_modules
    ports:
      - "3000:3000"
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - OMDB_API_KEY=${OMDB_API_KEY}
      - TMDB_API_KEY=${TMDB_API_KEY}
    depends_on:
      - db
    networks:
      - back
      - front
  db:
    image: postgres
    container_name: "db"
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - back

  adminer:
    image: adminer
    container_name: "adminer"
    depends_on:
      - db
    ports:
      - 8080:8080
    networks:
      - back

networks:
  front:
  back:
